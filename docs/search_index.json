[["normalization.html", "Chapter 4 Normalizing and centering data", " Chapter 4 Normalizing and centering data We utilize bayNorm (Tang et al., Bioinformatics, 2020) and log transformation after the addition of pseudo counts to normalize UMI-based scRNA-seq data. Additionally, we transform the log-normalized read counts by subtracting with the mean expression across cells. The resulting normalized and centered data will be used for downstream analyses. Load the data. source(&quot;R/function_general.R&quot;) day1_norm &lt;- readRDS(file = &quot;backup/01_004_day1_norm_trim_variables.rds&quot;) day7_hypo &lt;- readRDS(file = &quot;backup/02_004_day7_hypo_trim_variables.rds&quot;) sc68_vehi &lt;- readRDS(file = &quot;backup/03_004_sc68_vehi_trim_variables.rds&quot;) sc68_cisp &lt;- readRDS(file = &quot;backup/04_004_sc68_cisp_trim_variables.rds&quot;) pbmc_4000 &lt;- readRDS(file = &quot;backup/05_004_pbmc_4000_trim_variables.rds&quot;) pbmc_6000 &lt;- readRDS(file = &quot;backup/06_004_pbmc_6000_trim_variables.rds&quot;) Check the size of the gene-by-sample matrices. rbind(dim(day1_norm[[&quot;data&quot;]][[&quot;raw&quot;]]), dim(day7_hypo[[&quot;data&quot;]][[&quot;raw&quot;]]), dim(sc68_vehi[[&quot;data&quot;]][[&quot;raw&quot;]]), dim(sc68_cisp[[&quot;data&quot;]][[&quot;raw&quot;]]), dim(pbmc_4000[[&quot;data&quot;]][[&quot;raw&quot;]]), dim(pbmc_6000[[&quot;data&quot;]][[&quot;raw&quot;]])) [1,] 5272 3663 [2,] 6213 1947 [3,] 6581 3923 [4,] 6347 2285 [5,] 6658 3815 [6,] 5169 4878 Perform bayNorm() to infer the true copy numbers of transcripts. Below is the default setting of bayNorm(). doBayNorm &lt;- function(obj){ MeanBETA = 0.06 obj[[&quot;history&quot;]][[&quot;doBayNorm&quot;]][[&quot;MeanBETA&quot;]] &lt;- MeanBETA mat &lt;- as.matrix(obj[[&quot;data&quot;]][[&quot;raw&quot;]]) BETA &lt;- BetaFun(Data = mat, MeanBETA = MeanBETA) # 0.06 is the default value bay_out &lt;- bayNorm(mat, BETA_vec = BETA[[&quot;BETA&quot;]], mode_version = TRUE) obj[[&quot;data&quot;]][[&quot;bayNorm&quot;]] &lt;- bay_out return(obj) } day1_norm &lt;- doBayNorm(obj = day1_norm) day7_hypo &lt;- doBayNorm(obj = day7_hypo) sc68_vehi &lt;- doBayNorm(obj = sc68_vehi) sc68_cisp &lt;- doBayNorm(obj = sc68_cisp) pbmc_4000 &lt;- doBayNorm(obj = pbmc_4000) pbmc_6000 &lt;- doBayNorm(obj = pbmc_6000) The following function log1p_data() performs log (natural logarithm) transform of the input data with a pseudo count eps. log1p_data &lt;- function(obj, eps){ obj[[&quot;history&quot;]][[&quot;log1p_data&quot;]][[&quot;eps&quot;]] &lt;- eps mat &lt;- as.matrix(obj[[&quot;data&quot;]][[&quot;bayNorm&quot;]][[&quot;Bay_out&quot;]]) lmat &lt;- log(mat + eps) obj[[&quot;data&quot;]][[&quot;log1p&quot;]] &lt;- as.data.frame(lmat) return(obj) } day1_norm &lt;- log1p_data(obj = day1_norm, eps = 1) day7_hypo &lt;- log1p_data(obj = day7_hypo, eps = 1) sc68_vehi &lt;- log1p_data(obj = sc68_vehi, eps = 1) sc68_cisp &lt;- log1p_data(obj = sc68_cisp, eps = 1) pbmc_4000 &lt;- log1p_data(obj = pbmc_4000, eps = 1) pbmc_6000 &lt;- log1p_data(obj = pbmc_6000, eps = 1) The following function centralize_data() centralizes the input data on a gene-by-gene basis. centralize_data &lt;- function(obj){ mat &lt;- as.matrix(obj[[&quot;data&quot;]][[&quot;log1p&quot;]]) cmat &lt;- sweep(mat, 1, apply(mat, 1, mean), FUN = &quot;-&quot;) obj[[&quot;data&quot;]][[&quot;centered&quot;]] &lt;- as.data.frame(cmat) return(obj) } day1_norm &lt;- centralize_data(obj = day1_norm) day7_hypo &lt;- centralize_data(obj = day7_hypo) sc68_vehi &lt;- centralize_data(obj = sc68_vehi) sc68_cisp &lt;- centralize_data(obj = sc68_cisp) pbmc_4000 &lt;- centralize_data(obj = pbmc_4000) pbmc_6000 &lt;- centralize_data(obj = pbmc_6000) Save the objects. saveRDS(day1_norm, file = &quot;backup/01_005_day1_norm_normalized.rds&quot;) saveRDS(day7_hypo, file = &quot;backup/02_005_day7_hypo_normalized.rds&quot;) saveRDS(sc68_vehi, file = &quot;backup/03_005_sc68_vehi_normalized.rds&quot;) saveRDS(sc68_cisp, file = &quot;backup/04_005_sc68_cisp_normalized.rds&quot;) saveRDS(pbmc_4000, file = &quot;backup/05_005_pbmc_4000_normalized.rds&quot;) saveRDS(pbmc_6000, file = &quot;backup/06_005_pbmc_6000_normalized.rds&quot;) "]]
